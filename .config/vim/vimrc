" XDG Base Directory support
if empty($XDG_CACHE_HOME)   | let $XDG_CACHE_HOME = $HOME .. "/.cache"   | endif
if empty($XDG_CONFIG_HOME)  | let $XDG_CONFIG_HOME = $HOME .. "/.config"   | endif
if empty($XDG_DATA_HOME)    | let $XDG_DATA_HOME = $HOME .. "/.local/share"   | endif
if empty($XDG_STATE_HOME)   | let $XDG_STATE_HOME = $HOME .. "/.local/state"   | endif

if !has('nvim')
    if empty($MYVIMRC) | let $MYVIMRC = expand('<sfile>:p') | endif

    set runtimepath^=$XDG_CONFIG_HOME/vim
    set runtimepath+=$XDG_DATA_HOME/vim
    set runtimepath+=$XDG_CONFIG_HOME/vim/after

    set packpath^=$XDG_DATA_HOME/vim,$XDG_CONFIG_HOME/vim
    set packpath+=$XDG_CONFIG_HOME/vim/after,$XDG_DATA_HOME/vim/after

    set backupdir=$XDG_CACHE_HOME/vim/backup    | call mkdir(&backupdir, 'p')
    set directory=$XDG_CACHE_HOME/vim/swap      | call mkdir(&directory, 'p')
    set viewdir=$XDG_CACHE_HOME/vim/view        | call mkdir(&viewdir, 'p')
    set undodir=$XDG_CACHE_HOME/vim/undo        | call mkdir(&undodir, 'p')

    set viminfofile=$XDG_CACHE_HOME/vim/viminfo
    let g:netrw_home = $XDG_DATA_HOME .. "/vim"
    call mkdir($XDG_CACHE_HOME .. "/vim/spell", 'p')


    " Source all configuration files in the config directory
    source ~/.config/vim/chunks/settings.vim
    runtime! chunks/*.vim
else
    let $MYVIMRC="$XDG_CONFIG_HOME/nvim/init.lua" | source $MYVIMRC
endif

